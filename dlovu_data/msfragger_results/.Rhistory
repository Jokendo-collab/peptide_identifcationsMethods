OrgDb  = org.Hs.eg.db,
ont = "MF",
pAdjustMethod = "BH",
readable = TRUE,
pvalueCutoff  = 0.01,
qvalueCutoff  = 0.05)
ego_MF_df <-as.data.frame(ego_MF)
dotplot(ego_MF, showCategory=15)
barplot(ego_MF, showCategory=15)
#Doing all the ontologis at once
ego_all <- enrichGO(gene = gene.df$ENTREZID,
OrgDb = org.Hs.eg.db,
ont = "all",
pAdjustMethod = "BH",
readable = TRUE,
pvalueCutoff  = 0.01,
qvalueCutoff  = 0.05)
#Combine all the ontology figures together
barplot(ego_all, split="ONTOLOGY") + facet_grid(ONTOLOGY~., scale="free")
#Combine all the ontology figures together
dotplot(ego_all, split="ONTOLOGY") + facet_grid(ONTOLOGY~., scale="free")
# Plotting a complex venn diagram using upset plot diagram
upsetplot(ego_BP)
## remove redundent GO terms
ego2 <- simplify(ego_all)
cnetplot(ego2, foldChange=geneList)
#Biological Process (BP):
#Cellular Component (CC):
#Molecular Function (MF):
# write Go data to csv files
write_csv(ego_BP_df,"go_biological.process.tbhart.csv")
write_csv(ego_CC_df,"go_cellular_component.tbhart.csv")
write_csv(ego_MF_df,"go_molecular_function.tbhart.csv")
# complex venn diagram
upsetplot(ego2)
# Produces heatmap plot
heatplot(ego2)
heatplot(ego2, foldChange=geneList)
#Produces enrichment network plot
emapplot(ego2)
#Ridge plot
kk <- gseKEGG(geneList, nPerm=10000)
ridgeplot(kk)
setwd("C:/Users/Javan_Okendo/Desktop/proteomcs/gomsfragger")
setwd("C:/Users/Javan_Okendo/Desktop/proteomcs/gomsfragger")
dir()
packages = c("BiocManager","tidyverse","clusterProfiler","org.Hs.eg.db")
package.check <- lapply(packages, FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
})
#verify they are loaded
search()
data <- read_tsv("/home/javan/Desktop/msfraggerGO/data/combined_peptide.tsv")
library(org.Hs.eg.db) # this is for human. load a different library from here for a different speccies http://bioconductor.org/packages/release/BiocViews.html#___OrgDb
library(clusterProfiler)
library(enrichplot)
gene <- data$Gene # extract Gene's from MSFragger
# this translates the Gene from MSfragger to something enrichgo can read
gene.df <- bitr(gene, fromType = "SYMBOL",
toType = "ENTREZID",
OrgDb = org.Hs.eg.db)
# Make a geneList for some future functions
geneList <- gene.df$ENTREZID
names(geneList) <- as.character(gene.df$SYMBOL)
geneList <- sort(geneList, decreasing = TRUE)
# gene enrichment analysis cnplots are commented out as they look crazy with a large number of proteins
## BP
ego_BP <- enrichGO(gene = gene.df$ENTREZID,
OrgDb = org.Hs.eg.db,
ont = "BP",
pAdjustMethod = "BH",
readable = TRUE,
pvalueCutoff  = 0.01,
qvalueCutoff  = 0.05)
ego_BP_df <-as.data.frame(ego_BP) #convert GO terms to dataframe
#Dotplot and barplot only shows the most significantly enriched terms
dotplot(ego_BP, showCategory=20)
barplot(ego_BP, showCategory=20)
goplot(ego_BP,foldChange=geneList) #Plot the enriched terms and their significance
## remove redundent GO terms
ego2 <- simplify(ego_BP)
q()
#Install the required library
BiocManager::install("DEP")
install.packages("boot")
#Install the required library
BiocManager::install("DEP")
install.packages(c("Matrix", "mgcv", "survival"))
library("DEP")
BiocManager::install("mzR")
library("DEP")
library("DEP")
library("dplyr")
data <- UbiLength
BiocManager::install("mzR")
BiocManager::install("DEP")
install.packages("DEP", repo = 'https://mac.R-project.org')
BiocManager::install("MSnbase")
BiocManager::valid()
BiocManager::install(c("DEP", "MSnbase", "mzR"), update = TRUE, ask = FALSE)
library("BiocManager")
?BiocManager::install
BiocManager::install("DEP")
q()
library("DEP")
install.packages("pkgconfig")
library("DEP")
install.packages("ProtGenerics")
install.packages("ProtGenerics")
BiocManager::install("ProtGenerics")
library("DEP")
remove.packages("ProtGenerics")
install.packages("ProtGenerics")
install.packages("ProtGenerics")
BiocManager::install("ProtGenerics")
remove.packages("ProtGenerics")
remove.packages("ProtGenerics",lib = "/home/javan/R/x86_64-pc-linux-gnu-library/3.6")
BiocManager::install("ProtGenerics")
library("DEP")
R.version
run_app("LFQ")
library("DEP")
sudo
BiocManager::install("ProtGenerics")
library("ProtGenerics")
library("DEP")
BiocManager::install("DEP")
install.packages("ProtGenerics")
install.packages("ProtGenerics")
install.packages("proteomics")
install.packages("ProtGenerics")
library(mzR)
library("DEP")
BiocManager::install("DEP")
BiocManager::install("RforProteomics")
()
q()
BiocManager::install("RCulrl")
BiocManager::install("RCurl")
library("DEP")
BiocManager::install("DEP")
library("DEP")
q()
q()
#Set working directory
setwd("home/javan/Desktop/DEP/maxquant_Search_results/MQ_combined_LTB")
dir()
q()
setwd("/home/javan/Desktop/dlovuData/msfragger_results")
dir()
packages = c("BiocManager","tidyverse","clusterProfiler","org.Hs.eg.db")
#
package.check <- lapply(packages, FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
})
dir()
data <- read.table("tb_protein.tsv",header = T,sep = '\t')
library(org.Hs.eg.db) # this is for human. load a different library from here for a different speccies http://bioconductor.org/packages/release/BiocViews.html#___OrgDb
library(clusterProfiler)
library(enrichplot)
gene <- data$Gene.names# extract Gene's from MSFragger
gene <- data$Gene# extract Gene's from MSFragger
setwd("/home/javan/Desktop/dlovuData/msfragger_results")
dir()
# analysis url: https://bioshare.bioinformatics.ucdavis.edu/bioshare/download/tfxp6w02segq7c6/msfragger_cluser_profiler.nb.html
# http://www.jingege.wang/a/study/r/341.html
# load Libraries (install if necessary)
packages = c("BiocManager","tidyverse","clusterProfiler","org.Hs.eg.db")
#
package.check <- lapply(packages, FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
})
# BiocManager::install("clusterProfiler") # may need to uncomment this line  if this does not install because of bioconductor install weirdness
# BiocManager::install("org.Hs.eg.db") # may need to uncomment this line if this does not install because of bioconductor install weirdness
#verify they are loaded
search()
# load  msFragger data
# this is a 100 ng hela run on teh timstofPRO
# Change this to the combined protein file if it's a multiexperiment
data <- read.table("tb_protein.tsv",header = T,sep = '\t')
library(org.Hs.eg.db) # this is for human. load a different library from here for a different speccies http://bioconductor.org/packages/release/BiocViews.html#___OrgDb
library(clusterProfiler)
library(enrichplot)
gene <- data$Gene# extract Gene's from MSFragger
gene
# this translates the Gene from MSfragger to something enrichgo can read
gene.df <- bitr(gene, fromType = "SYMBOL",
toType = "ENTREZID",
OrgDb = org.Hs.eg.db)
# Make a geneList for some future functions
geneList <- gene.df$ENTREZID
names(geneList) <- as.character(gene.df$SYMBOL)
geneList <- sort(geneList, decreasing = TRUE)
# gene enrichment analysis cnplots are commented out as they look crazy with a large number of proteins
## BP
ego_BP <- enrichGO(gene = gene.df$ENTREZID,
OrgDb = org.Hs.eg.db,
ont = "BP",
pAdjustMethod = "BH",
readable = TRUE,
pvalueCutoff  = 0.01,
qvalueCutoff  = 0.05)
ego_BP_df <-as.data.frame(ego_BP) #convert GO terms to dataframe
#Dotplot and barplot only shows the most significantly enriched terms
## remove redundent GO terms first
ego2 <- simplify(ego_BP)
# Plot either dotplot or barplot
dotplot(ego2, showCategory=20)
barplot(ego2, showCategory=20)
goplot(ego2,foldChange=geneList) #Plot the enriched terms and their significance
cnetplot(ego2, foldChange=geneList)
cnetplot(ego2, foldChange=geneList, circular = F, colorEdge = T) #plotting a circular cnetplot, not good with many proteins
#Doing all the ontologis at once
ego_all <- enrichGO(gene = gene.df$ENTREZID,
OrgDb = org.Hs.eg.db,
ont = "all",
pAdjustMethod = "BH",
readable = TRUE,
pvalueCutoff  = 0.05,
qvalueCutoff  = 0.05)
#Combine all the ontology figures together
barplot(ego_all, split="ONTOLOGY") + facet_grid(ONTOLOGY~., scale="free")
#Combine all the ontology figures together
dotplot(ego_all, split="ONTOLOGY") + facet_grid(ONTOLOGY~., scale="free")
# Plotting a complex venn diagram using upset plot diagram
upsetplot(ego_BP)
# complex venn diagram
upsetplot(ego2)
# Produces heatmap plot
heatplot(ego2)
heatplot(ego2, foldChange=geneList)
#Produces enrichment network plot
emapplot(ego2)
#Ridge plot
gene.df$ENTREZID = bitr(gene.df$SYMBOL, fromType="SYMBOL", toType="ENSEMBL", OrgDb="org.Mm.eg.db")
#Ridge plot
gene.df$ENTREZID = bitr(gene.df$SYMBOL, fromType="SYMBOL", toType="ENSEMBL", OrgDb="org.Hs.eg.db")
geneList = as.numeric(gene.df$ENTREZID)
names(geneList) = as.character(gene.df$ENTREZID)
geneList = sort(geneList, decreasing = T)
kk <- gseKEGG(geneList, nPerm=10000)
ridgeplot(kk)
# Plot either dotplot or barplot
dotplot(ego2, showCategory=20)
barplot(ego2, showCategory=20)
goplot(ego2,foldChange=geneList) #Plot the enriched terms and their significance
cnetplot(ego2, foldChange=geneList, circular = F, colorEdge = T) #plotting a circular cnetplot, not good with many proteins
#Doing all the ontologis at once
ego_all <- enrichGO(gene = gene.df$ENTREZID,
OrgDb = org.Hs.eg.db,
ont = "all",
pAdjustMethod = "BH",
readable = TRUE,
pvalueCutoff  = 0.05,
qvalueCutoff  = 0.05)
#Combine all the ontology figures together
barplot(ego_all, split="ONTOLOGY") + facet_grid(ONTOLOGY~., scale="free")
#Combine all the ontology figures together
dotplot(ego_all, split="ONTOLOGY") + facet_grid(ONTOLOGY~., scale="free")
#Combine all the ontology figures together
barplot(ego_all, split="ONTOLOGY") + facet_grid(ONTOLOGY~., scale="free")
#Cellular component
ego_CC <- enrichGO(gene = gene.df$ENTREZID,
OrgDb = org.Hs.eg.db,
ont = "CC",
pAdjustMethod = "BH",
readable = TRUE,
pvalueCutoff  = 0.01,
qvalueCutoff  = 0.05)
## remove redundent GO terms
ego3 <- simplify(ego_CC)
ego_CC_df <-as.data.frame(ego_CC)
dotplot(ego3, showCategory=20)
barplot(ego3, showCategory=40)
goplot(ego3,foldChange=geneList) #Plot the enriched terms and their significance
#Plot the cnet to visualize protein cluster
cnetplot(ego3, foldChange=geneList)
cnetplot(ego3, foldChange=geneList, circular = F, colorEdge = TRUE) #plotting a circular cnetplot, not good with many proteins
# Enriched map visualize mutually overlapping proteins
emapplot(ego3)
## MF
ego_MF <- enrichGO(gene = gene.df$ENTREZID,
OrgDb  = org.Hs.eg.db,
ont = "MF",
pAdjustMethod = "BH",
readable = TRUE,
pvalueCutoff  = 0.01,
qvalueCutoff  = 0.05)
## remove redundent GO terms
ego4 <- simplify(ego_MF)
ego_MF_df <-as.data.frame(ego_MF)
dotplot(ego4, showCategory=20)
barplot(ego4, showCategory=20)
goplot(ego4,foldChange=geneList) #Plot the enriched terms and their significance
#Visualize the protein network
cnetplot(ego4, foldChange=geneList, circular = F, colorEdge = TRUE) #plotting a circular cnetplot, not good with many proteins
dir()
data <- read.table("pool_protein.tsv",header = T,sep = '\t')
library(org.Hs.eg.db) # this is for human. load a different library from here for a different speccies http://bioconductor.org/packages/release/BiocViews.html#___OrgDb
library(clusterProfiler)
library(enrichplot)
gene <- data$Gene# extract Gene's from MSFragger
# this translates the Gene from MSfragger to something enrichgo can read
gene.df <- bitr(gene, fromType = "SYMBOL",
toType = "ENTREZID",
OrgDb = org.Hs.eg.db)
# Make a geneList for some future functions
geneList <- gene.df$ENTREZID
names(geneList) <- as.character(gene.df$SYMBOL)
geneList <- sort(geneList, decreasing = TRUE)
# gene enrichment analysis cnplots are commented out as they look crazy with a large number of proteins
## BP
ego_BP <- enrichGO(gene = gene.df$ENTREZID,
OrgDb = org.Hs.eg.db,
ont = "BP",
pAdjustMethod = "BH",
readable = TRUE,
pvalueCutoff  = 0.01,
qvalueCutoff  = 0.05)
ego_BP_df <-as.data.frame(ego_BP) #convert GO terms to dataframe
#Dotplot and barplot only shows the most significantly enriched terms
## remove redundent GO terms first
ego2 <- simplify(ego_BP)
# Plot either dotplot or barplot
dotplot(ego2, showCategory=20)
barplot(ego2, showCategory=20)
goplot(ego2,foldChange=geneList) #Plot the enriched terms and their significance
cnetplot(ego2, foldChange=geneList, circular = F, colorEdge = T) #plotting a circular cnetplot, not good with many proteins
setwd("/home/javan/Desktop/dlovuData/msfragger_results")
dir()
# analysis url: https://bioshare.bioinformatics.ucdavis.edu/bioshare/download/tfxp6w02segq7c6/msfragger_cluser_profiler.nb.html
# http://www.jingege.wang/a/study/r/341.html
# load Libraries (install if necessary)
packages = c("BiocManager","tidyverse","clusterProfiler","org.Hs.eg.db")
#
package.check <- lapply(packages, FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
})
# BiocManager::install("clusterProfiler") # may need to uncomment this line  if this does not install because of bioconductor install weirdness
# BiocManager::install("org.Hs.eg.db") # may need to uncomment this line if this does not install because of bioconductor install weirdness
#verify they are loaded
search()
data <- read.table("pool_protein.tsv",header = T,sep = '\t')
data
library(org.Hs.eg.db) # this is for human. load a different library from here for a different speccies http://bioconductor.org/packages/release/BiocViews.html#___OrgDb
library(clusterProfiler)
library(enrichplot)
gene <- data$Gene# extract Gene's from MSFragger
# this translates the Gene from MSfragger to something enrichgo can read
gene.df <- bitr(gene, fromType = "SYMBOL",
toType = "ENTREZID",
OrgDb = org.Hs.eg.db)
# Make a geneList for some future functions
geneList <- gene.df$ENTREZID
names(geneList) <- as.character(gene.df$SYMBOL)
geneList <- sort(geneList, decreasing = TRUE)
# gene enrichment analysis cnplots are commented out as they look crazy with a large number of proteins
## BP
ego_BP <- enrichGO(gene = gene.df$ENTREZID,
OrgDb = org.Hs.eg.db,
ont = "BP",
pAdjustMethod = "BH",
readable = TRUE,
pvalueCutoff  = 0.01,
qvalueCutoff  = 0.05)
#Dotplot and barplot only shows the most significantly enriched terms
## remove redundent GO terms first
ego2 <- simplify(ego_BP)
cnetplot(ego2, foldChange=geneList, circular = F, colorEdge = T) #plotting a circular cnetplot, not good with many proteins
#Doing all the ontologis at once
ego_all <- enrichGO(gene = gene.df$ENTREZID,
OrgDb = org.Hs.eg.db,
ont = "all",
pAdjustMethod = "BH",
readable = TRUE,
pvalueCutoff  = 0.05,
qvalueCutoff  = 0.05)
#Combine all the ontology figures together
barplot(ego_all, split="ONTOLOGY") + facet_grid(ONTOLOGY~., scale="free")
#Combine all the ontology figures together
dotplot(ego_all, split="ONTOLOGY") + facet_grid(ONTOLOGY~., scale="free")
#Cellular component
ego_CC <- enrichGO(gene = gene.df$ENTREZID,
OrgDb = org.Hs.eg.db,
ont = "CC",
pAdjustMethod = "BH",
readable = TRUE,
pvalueCutoff  = 0.01,
qvalueCutoff  = 0.05)
## remove redundent GO terms
ego3 <- simplify(ego_CC)
ego_CC_df <-as.data.frame(ego_CC)
dotplot(ego3, showCategory=20)
barplot(ego3, showCategory=40)
goplot(ego3,foldChange=geneList) #Plot the enriched terms and their significance
cnetplot(ego3, foldChange=geneList, circular = F, colorEdge = TRUE) #plotting a circular cnetplot, not good with many proteins
## MF
ego_MF <- enrichGO(gene = gene.df$ENTREZID,
OrgDb  = org.Hs.eg.db,
ont = "MF",
pAdjustMethod = "BH",
readable = TRUE,
pvalueCutoff  = 0.01,
qvalueCutoff  = 0.05)
## remove redundent GO terms
ego4 <- simplify(ego_MF)
ego_MF_df <-as.data.frame(ego_MF)
dotplot(ego4, showCategory=20)
barplot(ego4, showCategory=20)
#Visualize the protein network
cnetplot(ego4, foldChange=geneList, circular = F, colorEdge = TRUE) #plotting a circular cnetplot, not good with many proteins
dir()
packages = c("BiocManager","tidyverse","clusterProfiler","org.Hs.eg.db")
#
package.check <- lapply(packages, FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
})
# Bi
data <- read.table("hrp_protein.tsv",header = T,sep = '\t')
library(org.Hs.eg.db) # this is for human. load a different library from here for a different speccies http://bioconductor.org/packages/release/BiocViews.html#___OrgDb
library(clusterProfiler)
library(enrichplot)
gene <- data$Gene# extract Gene's from MSFragger
# this translates the Gene from MSfragger to something enrichgo can read
gene.df <- bitr(gene, fromType = "SYMBOL",
toType = "ENTREZID",
OrgDb = org.Hs.eg.db)
# Make a geneList for some future functions
geneList <- gene.df$ENTREZID
names(geneList) <- as.character(gene.df$SYMBOL)
geneList <- sort(geneList, decreasing = TRUE)
# gene enrichment analysis cnplots are commented out as they look crazy with a large number of proteins
## BP
ego_BP <- enrichGO(gene = gene.df$ENTREZID,
OrgDb = org.Hs.eg.db,
ont = "BP",
pAdjustMethod = "BH",
readable = TRUE,
pvalueCutoff  = 0.01,
qvalueCutoff  = 0.05)
ego_BP_df <-as.data.frame(ego_BP) #convert GO terms to dataframe
#Dotplot and barplot only shows the most significantly enriched terms
## remove redundent GO terms first
ego2 <- simplify(ego_BP)
# Plot either dotplot or barplot
dotplot(ego2, showCategory=20)
cnetplot(ego2, foldChange=geneList, circular = F, colorEdge = T) #plotting a circular cnetplot, not good with many proteins
#Doing all the ontologis at once
ego_all <- enrichGO(gene = gene.df$ENTREZID,
OrgDb = org.Hs.eg.db,
ont = "all",
pAdjustMethod = "BH",
readable = TRUE,
pvalueCutoff  = 0.05,
qvalueCutoff  = 0.05)
#Combine all the ontology figures together
barplot(ego_all, split="ONTOLOGY") + facet_grid(ONTOLOGY~., scale="free")
#Cellular component
ego_CC <- enrichGO(gene = gene.df$ENTREZID,
OrgDb = org.Hs.eg.db,
ont = "CC",
pAdjustMethod = "BH",
readable = TRUE,
pvalueCutoff  = 0.01,
qvalueCutoff  = 0.05)
## remove redundent GO terms
ego3 <- simplify(ego_CC)
ego_CC_df <-as.data.frame(ego_CC)
dotplot(ego3, showCategory=20)
barplot(ego3, showCategory=40)
goplot(ego3,foldChange=geneList) #Plot the enriched terms and their significance
cnetplot(ego3, foldChange=geneList, circular = F, colorEdge = TRUE) #plotting a circular cnetplot, not good with many proteins
# Enriched map visualize mutually overlapping proteins
emapplot(ego3)
cnetplot(ego3, foldChange=geneList, circular = F, colorEdge = TRUE) #plotting a circular cnetplot, not good with many proteins
## MF
ego_MF <- enrichGO(gene = gene.df$ENTREZID,
OrgDb  = org.Hs.eg.db,
ont = "MF",
pAdjustMethod = "BH",
readable = TRUE,
pvalueCutoff  = 0.01,
qvalueCutoff  = 0.05)
## remove redundent GO terms
ego4 <- simplify(ego_MF)
ego_MF_df <-as.data.frame(ego_MF)
dotplot(ego4, showCategory=20)
barplot(ego4, showCategory=20)
#Visualize the protein network
cnetplot(ego4, foldChange=geneList, circular = F, colorEdge = TRUE) #plotting a circular cnetplot, not good with many proteins
#Visualize the protein network
cnetplot(ego4, foldChange=geneList, circular = F, colorEdge = F) #plotting a circular cnetplot, not good with many proteins
#Visualize the protein network
cnetplot(ego4, foldChange=geneList, circular = F, colorEdge = T) #plotting a circular cnetplot, not good with many proteins
#Combine all the ontology figures together
dotplot(ego_all, split="ONTOLOGY") + facet_grid(ONTOLOGY~., scale="free")
q()
